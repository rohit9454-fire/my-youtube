{"ast":null,"code":"var _jsxFileName = \"/Users/rohit.singh1/Desktop/React JS Learning/my-youtube/src/components/VideoContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { YOUTUBE_VIDEO_API } from '../utils/constant';\nimport VideoCards from './VideoCards';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContainer = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    getVideos();\n  }, []);\n  const getVideos = async () => {\n    const videoList = await fetch(YOUTUBE_VIDEO_API);\n    const JSON = await videoList.json();\n    setVideos(JSON === null || JSON === void 0 ? void 0 : JSON.items);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap\",\n    children: videos.map(item => /*#__PURE__*/_jsxDEV(Link, {\n      to: 'watch?v=' + (item === null || item === void 0 ? void 0 : item.id),\n      children: /*#__PURE__*/_jsxDEV(VideoCards, {\n        info: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, item === null || item === void 0 ? void 0 : item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoContainer, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = VideoContainer;\nexport default VideoContainer;\nvar _c;\n$RefreshReg$(_c, \"VideoContainer\");","map":{"version":3,"names":["React","useEffect","useState","YOUTUBE_VIDEO_API","VideoCards","Link","jsxDEV","_jsxDEV","VideoContainer","_s","videos","setVideos","getVideos","videoList","fetch","JSON","json","items","className","children","map","item","to","id","info","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohit.singh1/Desktop/React JS Learning/my-youtube/src/components/VideoContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { YOUTUBE_VIDEO_API } from '../utils/constant'\nimport VideoCards from './VideoCards'\nimport { Link } from 'react-router-dom'\n\nconst VideoContainer = () => {\n    const [videos, setVideos] = useState([])\n    useEffect(() => {\n        getVideos()\n    }, [])\n\n    const getVideos = async () => {\n        const videoList = await fetch(YOUTUBE_VIDEO_API);\n        const JSON = await videoList.json();\n        setVideos(JSON?.items)\n    }\n\n    return (\n        <div className='flex flex-wrap'>\n            {videos.map((item) =>\n                <Link key={item?.id} to={'watch?v=' + item?.id}>\n                    <VideoCards info={item} />\n                </Link>\n            )}\n        </div>\n    )\n}\n\nexport default VideoContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAACX,iBAAiB,CAAC;IAChD,MAAMY,IAAI,GAAG,MAAMF,SAAS,CAACG,IAAI,CAAC,CAAC;IACnCL,SAAS,CAACI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAAC;EAC1B,CAAC;EAED,oBACIV,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BT,MAAM,CAACU,GAAG,CAAEC,IAAI,iBACbd,OAAA,CAACF,IAAI;MAAgBiB,EAAE,EAAE,UAAU,IAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE,CAAC;MAAAJ,QAAA,eAC3CZ,OAAA,CAACH,UAAU;QAACoB,IAAI,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADnBP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAnB,EAAA,CArBKD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAuBpB,eAAeA,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}