{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ChatMessage from './ChatMessage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage } from '../utils/redux/chatSlice';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveChat = () => {\n  _s();\n  const dispatch = useDispatch();\n  const chatMessages = useSelector(store => store.chat.message);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(addMessage({\n        name: 'Rohit',\n        message: 'This is live chat'\n      }));\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  console.log('chatMessages', chatMessages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(LiveChat, \"gVZM21C5j4xuN95WMiwWabZLZQI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LiveChat;\nexport default LiveChat;\nvar _c;\n$RefreshReg$(_c, \"LiveChat\");","map":{"version":3,"names":["React","useEffect","ChatMessage","useDispatch","useSelector","addMessage","Fragment","_Fragment","jsxDEV","_jsxDEV","LiveChat","_s","dispatch","chatMessages","store","chat","message","interval","setInterval","name","clearInterval","console","log","_c","$RefreshReg$"],"sources":["/Users/rohit.singh1/Desktop/React JS Learning/my-youtube/src/components/LiveChat.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport ChatMessage from './ChatMessage'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage } from '../utils/redux/chatSlice';\n\nconst LiveChat = () => {\n    const dispatch = useDispatch()\n    const chatMessages = useSelector((store) => store.chat.message)\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            dispatch(addMessage({\n                name: 'Rohit',\n                message: 'This is live chat'\n            }))\n        }, 2000)\n\n        return () => clearInterval(interval)\n    }, [])\n\n    console.log('chatMessages', chatMessages);\n    return (<>\n        {/* {\n            chatMessages.length > 0 && <div className='ml-2 p-2 border border-black h-[600px] w-64 rounded-lg bg-slate-100'>\n                {chatMessages.map((item, index) => <ChatMessage key={index} name={item.name} message={item.message} />)}\n            </div>\n        } */}\n    </>\n    )\n}\n\nexport default LiveChat"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,YAAY,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC;EAE/Df,SAAS,CAAC,MAAM;IACZ,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BN,QAAQ,CAACP,UAAU,CAAC;QAChBc,IAAI,EAAE,OAAO;QACbH,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMI,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAENI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,YAAY,CAAC;EACzC,oBAAQJ,OAAA,CAAAF,SAAA,mBAMN,CAAC;AAEP,CAAC;AAAAI,EAAA,CAxBKD,QAAQ;EAAA,QACOP,WAAW,EACPC,WAAW;AAAA;AAAAmB,EAAA,GAF9Bb,QAAQ;AA0Bd,eAAeA,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}